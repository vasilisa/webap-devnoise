{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/RLNOISE_KIDS/webap-rlnoise-kids/src/components/Block/Block.js\";\nimport React from 'react';\nimport { Button } from 'react-bootstrap';\nimport { withRouter } from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport { handleResponse } from '../helpers';\nimport { CSSTransitionGroup } from 'react-transition-group';\nimport Score from '../Score/Score';\nimport './Block.css';\n\nclass Block extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.redirectToSurvey = () => {\n      // Post the bonus amount together with the prolific id and participant ids in the ParticipantsDataBonus table: \n      let body = {\n        'participant_id': this.state.participant_info.participant_id,\n        'prolific_id': this.state.participant_info.prolific_id,\n        'date': this.state.participant_info.date,\n        'bonus': this.state.score\n      }; // console.log(body) \n\n      fetch(`${API_URL}/participants_data_bonus/create/` + this.state.participant_info.participant_id + '/' + this.state.participant_info.prolific_id, {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n      });\n      this.props.history.push({\n        pathname: `/`\n      });\n    };\n\n    const participant_info = this.props.location.state.participant_info;\n    const block_info = {\n      position: [],\n      reward_1: [],\n      reward_2: [],\n      block_feedback: '',\n      trial_numb: 0,\n      block_number: '',\n      block_type: '',\n      TotalTrial: '',\n      outcome: '',\n      prev_outcome: ''\n    };\n    this.state = {\n      participant_info: participant_info,\n      block_info: block_info,\n      newblock_frame: this.props.location.state.newblock_frame,\n      pool_symbols: {},\n      pool_outcomes: {},\n      score: -1,\n      load_bonus: false\n    };\n    this.fetchBlock.bind(this);\n    this.fetchSymbols.bind(this);\n    this.redirectToScore.bind(this);\n    this._isMounted = false;\n\n    this._handleGoBack.bind(this);\n  }\n\n  redirectToTarget() {\n    // console.log(this.state.pool_symbols)\n    if (this.state.participant_info.block_number <= this.state.participant_info.TotalBlock) {\n      if (this.state.newblock_frame) {\n        // if TRUE proceed to the board\n        this.setState({\n          newblock_frame: false\n        });\n        this.props.history.push({\n          pathname: `/Board`,\n          state: {\n            participant_info: this.state.participant_info,\n            block_info: this.state.block_info,\n            pool_symbols: this.state.pool_symbols,\n            pool_outcomes: this.state.pool_outcomes\n          }\n        });\n      } else {\n        if (this._isMounted) {\n          // console.log(this.state.participant_info.block_number)\n          const newblocknumber = this.state.participant_info.block_number + 1;\n          console.log('Block number updated', newblocknumber);\n\n          if (newblocknumber === this.state.participant_info.TotalBlock + 1) {\n            // console.log('Fetching the score')\n            this.fetchScore();\n          } else {\n            this.fetchBlock(this.state.participant_info.game_id, newblocknumber + 1); //this.state.participant_info.block_number\n\n            this.fetchSymbols(this.state.participant_info.game_id, newblocknumber + 1);\n            this.setState({\n              newblock_frame: true,\n              participant_info: { ...this.state.participant_info,\n                block_number: newblocknumber\n              }\n            }); // what gets updated \n          }\n        }\n      }\n    }\n  } // When the task is over \n\n\n  fetchScore() {\n    if (this._isMounted) {\n      fetch(`${API_URL}/participants_data/score/` + this.state.participant_info.participant_id + '/' + this.state.participant_info.game_id + '/' + this.state.participant_info.prolific_id).then(handleResponse).then(data => {\n        const bonus = data['bonus']; // console.log(bonus)\n\n        this.setState({\n          score: bonus,\n          loading: false,\n          load_bonus: true,\n          newblock_frame: true,\n          participant_info: { ...this.state.participant_info,\n            block_number: this.state.participant_info.TotalBlock + 1\n          }\n        });\n      }).catch(error => {\n        this.setState({\n          error: error.errorMessage,\n          loading: false,\n          load_bonus: false\n        });\n      });\n    }\n  }\n\n  redirectToScore() {\n    if (this.state.load_bonus === false) {\n      this.fetchScore();\n    } else if (this.state.load_bonus === true) {\n      return React.createElement(Score, {\n        score: this.state.score,\n        onClicked: this.redirectToSurvey,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this._isMounted && this.fetchBlock(this.state.participant_info.game_id, this.state.participant_info.block_number + 1);\n    this._isMounted && this.fetchSymbols(this.state.participant_info.game_id, this.state.participant_info.block_number + 1);\n    window.history.pushState(window.state, null, window.location.href);\n    window.addEventListener('popstate', e => this._handleGoBack(e));\n    window.onbeforeunload = this._handleRefresh;\n  }\n\n  _handleRefresh(evt) {\n    return false; // error message when refresh occurs\n  }\n\n  _handleGoBack(event) {\n    window.history.go(1);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  fetchSymbols(game_id_, block_number_) {\n    fetch(`${API_URL}/games/` + game_id_ + '/' + block_number_).then(handleResponse).then(data => {\n      const required_pool_of_symbols = Object.keys(data['symbols']).map((key, index) => require('../../images/' + data['symbols'][key])); // const required_pool_of_symbols = Object.keys(data['symbols']).map((key, index) => (require('../../images/' + 'planet_'+[key]+'.png')))\n\n      const required_pool_outcome = {\n        0: require('../../images/diamond.png'),\n        1: require('../../images/rubin.png')\n      };\n      console.log(required_pool_outcome);\n      console.log(required_pool_of_symbols);\n      this.setState({\n        pool_symbols: required_pool_of_symbols,\n        loading: false,\n        pool_outcomes: required_pool_outcome\n      });\n    }).catch(error => {\n      this.setState({\n        error: error.errorMessage,\n        loading: false\n      });\n    });\n  } // This is to get the data for a specific block from the Back \n\n\n  fetchBlock(game_id_, block_number_) {\n    const prev_outcome = this.state.block_info.prev_outcome === 'diamond' ? 'diamond' : 'rubin';\n    const outcome = this.state.block_info.prev_outcome === 'diamond' ? 'rubin' : 'diamond';\n    console.log('const outcome', outcome);\n    this.setState({\n      loading: true\n    });\n    const fetchResult = fetch(`${API_URL}/game_blocks/` + game_id_ + '/' + block_number_).then(handleResponse).then(data => {\n      const block_info = {\n        block_number: data.block_number,\n        block_feedback: data.block_feedback,\n        block_type: data.block_type,\n        reward_1: Object.keys(data['reward_1']).map((key, index) => data['reward_1'][key]),\n        reward_2: Object.keys(data['reward_2']).map((key, index) => data['reward_2'][key]),\n        th_reward_1: Object.keys(data['th_reward_1']).map((key, index) => data['th_reward_1'][key]),\n        th_reward_2: Object.keys(data['th_reward_2']).map((key, index) => data['th_reward_2'][key]),\n        position: Object.keys(data['position']).map((key, index) => data['position'][key]),\n        trial_numb: 0,\n        TotalTrial: 2,\n        // Object.keys(data['reward_1']).length, \n        outcome: outcome,\n        prev_outcome: prev_outcome\n      };\n      this.setState({\n        block_info: block_info\n      });\n      console.log(this.state.block_info);\n    }).catch(error => {\n      this.setState({\n        error: error.errorMessage,\n        loading: false\n      });\n    });\n    const response = fetchResult;\n    return response;\n  }\n\n  render() {\n    let text;\n\n    if (this.state.participant_info.block_number === 0 && this.state.newblock_frame) // training \n      {\n        text = React.createElement(\"div\", {\n          className: \"symbolframe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"introsymbol2\",\n          src: require('../../images/planet_5.png'),\n          alt: \"introsymbol\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }), React.createElement(\"img\", {\n          className: \"introsymbol2\",\n          src: require('../../images/planet_6.png'),\n          alt: \"introsymbol\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }));\n        return React.createElement(CSSTransitionGroup, {\n          className: \"container\",\n          component: \"div\",\n          transitionName: \"fade\",\n          transitionEnterTimeout: 800,\n          transitionLeaveTimeout: 500,\n          transitionAppear: true,\n          transitionAppearTimeout: 500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"astro2\",\n          src: require('../../images/astraunot2.png'),\n          alt: \"astro\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"instructionsButtonContainer\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, text), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructions\",\n          onClick: () => this.redirectToTarget(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"\\u2192\"))))));\n      } else if (this.state.participant_info.block_number === 0 && this.state.newblock_frame === false) {\n      text = React.createElement(\"div\", {\n        className: \"textbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, \"Did you notice that the planet that was giving more diamonds was not the same?\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"At the beginning it was \", React.createElement(\"span\", {\n        class: \"bold purple\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \" the purple planet \"), \" but in the middle of the session it changed, and \", React.createElement(\"span\", {\n        class: \"bold blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, \"the blue planet \"), \" became more rewarding?!\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, \" It is important that you payed attention to this in order to win!\"));\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"instructionsButtonContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      }, text), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 301\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"buttonInstructions\",\n        onClick: () => this.redirectToTarget(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }, \"\\u2192\"))))));\n    } else if (this.state.participant_info.block_number === 1 && this.state.newblock_frame) // TRUE \n      {\n        text = React.createElement(\"div\", {\n          className: \"textbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"You finished the training!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 315\n          },\n          __self: this\n        }, \"Let's start the task now!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, \"Finding the most rewarding planet will be harder now, so pay attention!\"));\n        return React.createElement(CSSTransitionGroup, {\n          className: \"container\",\n          component: \"div\",\n          transitionName: \"fade\",\n          transitionEnterTimeout: 800,\n          transitionLeaveTimeout: 500,\n          transitionAppear: true,\n          transitionAppearTimeout: 500,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 318\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          className: \"astro2\",\n          src: require('../../images/astraunot2.png'),\n          alt: \"astro\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"textbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }, text, \"  \", React.createElement(\"div\", {\n          className: \"translate\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 331\n          },\n          __self: this\n        })), React.createElement(\"center\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(Button, {\n          className: \"buttonInstructions\",\n          onClick: () => this.redirectToTarget(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, \"\\u2192\"))))));\n      } else if (this.state.participant_info.block_number === this.state.participant_info.TotalBlock + 1 && this.state.load_bonus === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346\n        },\n        __self: this\n      }, this.redirectToScore());\n    } else if (this.state.participant_info.block_number === 1 && this.state.newblock_frame === false) {\n      // adjust here for the final score \n      const feedback_type_text = this.state.block_info.outcome === \"diamond\" ? 'DIAMONDS' : 'RUBINS'; // this is from the unupdated block so it is reversed \n\n      if (feedback_type_text === \"DIAMONDS\") {\n        text = React.createElement(\"div\", {\n          className: \"symbolframe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 355\n          },\n          __self: this\n        }, \"Let's play again!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, \"Now find which of two planets has more \", React.createElement(\"span\", {\n          class: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356\n          },\n          __self: this\n        }, feedback_type_text, \" in it!\")), React.createElement(\"img\", {\n          className: \"introsymbol2\",\n          src: require('../../images/diamond.png'),\n          alt: \"introsymbol\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }));\n      } else {\n        text = React.createElement(\"div\", {\n          className: \"symbolframe\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361\n          },\n          __self: this\n        }, \"Let's play again!\"), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, \"Now find which of two planets has more \", React.createElement(\"span\", {\n          class: \"bold\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        }, feedback_type_text, \" in it!\")), React.createElement(\"img\", {\n          className: \"introsymbol2\",\n          src: require('../../images/rubin.png'),\n          alt: \"introsymbol\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 363\n          },\n          __self: this\n        }));\n      }\n\n      return React.createElement(CSSTransitionGroup, {\n        className: \"container\",\n        component: \"div\",\n        transitionName: \"fade\",\n        transitionEnterTimeout: 800,\n        transitionLeaveTimeout: 500,\n        transitionAppear: true,\n        transitionAppearTimeout: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"astro2\",\n        src: require('../../images/astraunot2.png'),\n        alt: \"astro\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"textbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, text), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"buttonInstructions\",\n        onClick: () => this.redirectToTarget(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, \"\\u2192\"))))));\n    } else if (this.state.participant_info.block_number === 2 && this.state.newblock_frame === true) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, setTimeout(() => this.redirectToTarget(), 800));\n    } else if (this.state.participant_info.block_number === 2 && this.state.newblock_frame === false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, setTimeout(() => this.redirectToScore(), 800));\n    }\n  }\n\n}\n\nexport default withRouter(Block);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/RLNOISE_KIDS/webap-rlnoise-kids/src/components/Block/Block.js"],"names":["React","Button","withRouter","API_URL","handleResponse","CSSTransitionGroup","Score","Block","Component","constructor","props","redirectToSurvey","body","state","participant_info","participant_id","prolific_id","date","score","fetch","method","headers","JSON","stringify","history","push","pathname","location","block_info","position","reward_1","reward_2","block_feedback","trial_numb","block_number","block_type","TotalTrial","outcome","prev_outcome","newblock_frame","pool_symbols","pool_outcomes","load_bonus","fetchBlock","bind","fetchSymbols","redirectToScore","_isMounted","_handleGoBack","redirectToTarget","TotalBlock","setState","newblocknumber","console","log","fetchScore","game_id","then","data","bonus","loading","catch","error","errorMessage","componentDidMount","window","pushState","href","addEventListener","e","onbeforeunload","_handleRefresh","evt","event","go","componentWillUnmount","game_id_","block_number_","required_pool_of_symbols","Object","keys","map","key","index","require","required_pool_outcome","fetchResult","th_reward_1","th_reward_2","response","render","text","feedback_type_text","setTimeout"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Button } from 'react-bootstrap';\nimport {withRouter} from 'react-router-dom';\nimport { API_URL } from '../../config';\nimport { handleResponse } from '../helpers';\n\nimport { CSSTransitionGroup } from 'react-transition-group';\n\nimport Score from '../Score/Score';\nimport './Block.css'\n\nclass Block extends React.Component {\n  constructor(props){\n    super(props);\n    const participant_info = this.props.location.state.participant_info\n    \n    const block_info = {\n\n      position      : [],\n      reward_1      : [],\n      reward_2      : [],\n      block_feedback: '',  \n      trial_numb    : 0,\n      block_number  : '',\n      block_type    : '',\n      TotalTrial    : '',\n      outcome       : '',\n      prev_outcome  : '',  \n    }\n\n    this.state = {\n      participant_info : participant_info,\n      block_info       : block_info,\n      newblock_frame   : this.props.location.state.newblock_frame,\n      pool_symbols     : {},\n      pool_outcomes    : {}, \n      score : -1,\n      load_bonus: false,\n    }\n\n    this.fetchBlock.bind(this);\n    this.fetchSymbols.bind(this);\n    this.redirectToScore.bind(this); \n    this._isMounted = false;\n    this._handleGoBack.bind(this);   \n  }\n\n    \n  redirectToTarget () {\n      // console.log(this.state.pool_symbols)\n      if((this.state.participant_info.block_number <= (this.state.participant_info.TotalBlock)))\n          {           \n          if (this.state.newblock_frame){ // if TRUE proceed to the board\n          this.setState({newblock_frame : false})\n          this.props.history.push({\n           pathname: `/Board`,\n           state: {participant_info: this.state.participant_info,\n                   block_info      : this.state.block_info,\n                   pool_symbols    : this.state.pool_symbols,\n                   pool_outcomes   : this.state.pool_outcomes,\n                 }\n          })}\n          else \n          {\n            if (this._isMounted)\n            {\n              \n              // console.log(this.state.participant_info.block_number)\n              const newblocknumber = this.state.participant_info.block_number + 1\n              \n              console.log('Block number updated',newblocknumber)\n\n              if (newblocknumber === this.state.participant_info.TotalBlock+1){\n                // console.log('Fetching the score')\n                this.fetchScore()\n                }\n\n              else {\n                this.fetchBlock(this.state.participant_info.game_id,newblocknumber+1) //this.state.participant_info.block_number\n                this.fetchSymbols(this.state.participant_info.game_id,newblocknumber+1); \n                this.setState({newblock_frame : true, participant_info : {...this.state.participant_info, block_number:newblocknumber},}) // what gets updated \n              }\n            }\n          }\n        }\n      }\n    \n  // When the task is over \n  fetchScore() {\n  if (this._isMounted) {\n\n    fetch(`${API_URL}/participants_data/score/`+ this.state.participant_info.participant_id +'/'+ this.state.participant_info.game_id +'/'+this.state.participant_info.prolific_id)\n            .then(handleResponse)\n            .then((data) => {\n              const bonus = data['bonus']\n              // console.log(bonus)\n\n              this.setState({\n                  score : bonus,\n                  loading : false,\n                  load_bonus: true,\n                  newblock_frame : true,\n                  participant_info : {...this.state.participant_info, block_number:this.state.participant_info.TotalBlock+1}\n                });\n            })\n            .catch((error) => {\n                this.setState({ error : error.errorMessage, loading: false, load_bonus: false });\n                 });\n}\n}\n\nredirectToScore() {\nif (this.state.load_bonus === false) {\n  this.fetchScore() \n}\n  \nelse if  (this.state.load_bonus === true){\n   return (\n        <Score\n          score      = {this.state.score}  \n          onClicked  = {this.redirectToSurvey}\n        />\n      );}\n }\n\nredirectToSurvey = () => {\n\n  // Post the bonus amount together with the prolific id and participant ids in the ParticipantsDataBonus table: \n  let body = { \n              'participant_id'  : this.state.participant_info.participant_id,\n              'prolific_id'     : this.state.participant_info.prolific_id,\n              'date'            : this.state.participant_info.date,\n              'bonus'           : this.state.score}\n              \n    // console.log(body) \n    fetch(`${API_URL}/participants_data_bonus/create/`+this.state.participant_info.participant_id +'/'+this.state.participant_info.prolific_id, {\n       method: 'POST',\n       headers: {\n         'Accept': 'application/json',\n         'Content-Type': 'application/json',\n       },\n       body: JSON.stringify(body)\n     })\n    this.props.history.push({\n      pathname: `/`})\n  } \n  componentDidMount() {  \n  this._isMounted = true;\n  this._isMounted && this.fetchBlock(this.state.participant_info.game_id,this.state.participant_info.block_number+1);\n  this._isMounted && this.fetchSymbols(this.state.participant_info.game_id,this.state.participant_info.block_number+1);\n  window.history.pushState(window.state, null, window.location.href);\n  window.addEventListener('popstate', e => this._handleGoBack(e));\n  window.onbeforeunload = this._handleRefresh\n  }\n\n  _handleRefresh(evt){\n    return false // error message when refresh occurs\n  }\n\n  _handleGoBack(event){\n    window.history.go(1);\n  }\n\n  componentWillUnmount()\n   {\n    this._isMounted = false;\n   }  \n\n  fetchSymbols(game_id_,block_number_) {\n    fetch(`${API_URL}/games/`+game_id_+'/'+block_number_) \n      .then(handleResponse)\n      .then((data) => {\n\n        const required_pool_of_symbols = Object.keys(data['symbols']).map((key, index) => (require('../../images/' + data['symbols'][key])))\n        // const required_pool_of_symbols = Object.keys(data['symbols']).map((key, index) => (require('../../images/' + 'planet_'+[key]+'.png')))\n        const required_pool_outcome    = {0: require('../../images/diamond.png'),  \n                                          1: require('../../images/rubin.png')}\n\n        console.log(required_pool_outcome)\n\n        console.log(required_pool_of_symbols)    \n\n          this.setState({\n            pool_symbols  : required_pool_of_symbols,\n            loading       : false, \n            pool_outcomes : required_pool_outcome  \n          });\n        })\n\n      .catch((error) => {\n        this.setState({ error : error.errorMessage, loading: false });\n         });\n       }\n\n// This is to get the data for a specific block from the Back \n  fetchBlock(game_id_,block_number_) {\n\n\n    const prev_outcome = (this.state.block_info.prev_outcome==='diamond') ? 'diamond': 'rubin'\n    const outcome      = (this.state.block_info.prev_outcome==='diamond') ? 'rubin': 'diamond'\n        \n    console.log('const outcome',outcome)\n\n    this.setState({ loading: true });\n    const fetchResult = fetch(`${API_URL}/game_blocks/`+game_id_+'/'+block_number_)\n      .then(handleResponse)\n      .then((data) => {\n\n        const block_info = {\n          block_number   : data.block_number,\n          block_feedback : data.block_feedback, \n          block_type     : data.block_type,\n          reward_1       : Object.keys(data['reward_1']).map((key, index) => (data['reward_1'][key])),\n          reward_2       : Object.keys(data['reward_2']).map((key, index) => (data['reward_2'][key])),\n          th_reward_1    : Object.keys(data['th_reward_1']).map((key, index) => (data['th_reward_1'][key])),\n          th_reward_2    : Object.keys(data['th_reward_2']).map((key, index) => (data['th_reward_2'][key])),\n          position       : Object.keys(data['position']).map((key, index) => (data['position'][key])),\n          trial_numb     : 0,\n          TotalTrial     : 2, // Object.keys(data['reward_1']).length, \n          outcome        : outcome, \n          prev_outcome   : prev_outcome\n        }\n          \n        this.setState({\n          block_info: block_info,\n        });\n        \n        console.log(this.state.block_info)\n      })\n        .catch((error) => {\n          this.setState({ error : error.errorMessage, loading: false });\n      });\n    const response = fetchResult;\n    return response\n  }\n\n\nrender()\n  { \n    let text\n    if ((this.state.participant_info.block_number === 0) && (this.state.newblock_frame)) // training \n    { \n      text = <div className='symbolframe'> \n                <img className=\"introsymbol2\"  src={require('../../images/planet_5.png')} alt='introsymbol' /> \n                <img className=\"introsymbol2\"  src={require('../../images/planet_6.png')} alt='introsymbol' /> \n            </div>\n\n    return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}>\n\n      <div>\n      <img className=\"astro2\" src={require('../../images/astraunot2.png')} alt='astro'/>\n        \n      <center> \n      <div className=\"instructionsButtonContainer\">\n        <div>\n          {text}           \n        </div> \n        <center>\n          <Button className=\"buttonInstructions\" onClick={()=>this.redirectToTarget()}>\n            &#8594;\n          </Button>\n        </center>\n      </div>\n      </center> \n      </div>\n      </CSSTransitionGroup>);\n    } \n\n    else if ((this.state.participant_info.block_number===0) && (this.state.newblock_frame===false))\n    {\n      text = <div className='textbox'> \n                <p>Did you notice that the planet that was giving more diamonds was not the same?</p>\n                <p>At the beginning it was <span class=\"bold purple\"> the purple planet </span> but in the middle of the session it changed, and <span class=\"bold blue\">the blue planet </span> became more rewarding?!</p>\n                <p></p>\n                <p> It is important that you payed attention to this in order to win!</p>\n                </div>\n      \n        return (\n          <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}>\n          <div>\n          <center> \n          <div className=\"instructionsButtonContainer\">\n            <div>\n              {text}           \n            </div>\n            <center>\n              <Button className=\"buttonInstructions\" onClick={()=>this.redirectToTarget()}>\n              &#8594;\n              </Button>\n            </center>\n          </div>\n          </center>\n          </div>\n          </CSSTransitionGroup>);\n    }\n    else if ((this.state.participant_info.block_number===1) && (this.state.newblock_frame)) // TRUE \n    {\n      text = <div className='textbox'><p>You finished the training!</p>\n                  <p></p>\n                  <p>Let's start the task now!</p>\n                  <p>Finding the most rewarding planet will be harder now, so pay attention!</p></div>\n      return (\n      <CSSTransitionGroup\n      className=\"container\"\n      component=\"div\"\n      transitionName=\"fade\"\n      transitionEnterTimeout={800}\n      transitionLeaveTimeout={500}\n      transitionAppear\n      transitionAppearTimeout={500}>\n        <div>\n        <img className=\"astro2\" src={require('../../images/astraunot2.png')} alt='astro'/>\n        <center> \n        <div>\n          <div className=\"textbox\">\n            {text}  <div className=\"translate\"/>\n          </div>\n          <center>\n            <Button className=\"buttonInstructions\" onClick={()=>this.redirectToTarget()}>\n            &#8594;\n            </Button>\n          </center>\n        </div>\n        </center>\n        </div>\n        </CSSTransitionGroup>);\n    }\n    else if ((this.state.participant_info.block_number===this.state.participant_info.TotalBlock+1) && (this.state.load_bonus===true))\n    {\n      return(\n        <div>{this.redirectToScore()}</div>\n        )\n    }\n    else if ((this.state.participant_info.block_number===1) && (this.state.newblock_frame===false)){  // adjust here for the final score \n      \n      const feedback_type_text = (this.state.block_info.outcome===\"diamond\") ? 'DIAMONDS' : 'RUBINS'; // this is from the unupdated block so it is reversed \n      \n      if (feedback_type_text===\"DIAMONDS\") {\n\n          text = <div className='symbolframe'><p>Let's play again!</p>\n                <p>Now find which of two planets has more <span class =\"bold\">{feedback_type_text} in it!</span></p>\n                 <img className=\"introsymbol2\"  src={require('../../images/diamond.png')}  alt='introsymbol' /> \n                </div>\n      }\n      else {\n            text = <div className='symbolframe'><p>Let's play again!</p>\n                <p>Now find which of two planets has more <span class =\"bold\">{feedback_type_text} in it!</span></p>\n                 <img className=\"introsymbol2\"  src={require('../../images/rubin.png')}  alt='introsymbol' /> \n                </div>\n      }\n        return(\n          <CSSTransitionGroup\n            className=\"container\"\n            component=\"div\"\n            transitionName=\"fade\"\n            transitionEnterTimeout={800}\n            transitionLeaveTimeout={500}\n            transitionAppear\n            transitionAppearTimeout={500}>\n          <div>\n            <img className=\"astro2\" src={require('../../images/astraunot2.png')} alt='astro'/>\n            <center> \n            <div>\n            <div className=\"textbox\">\n              {text}  \n            </div>\n            <center>\n              <Button className=\"buttonInstructions\" onClick={()=>this.redirectToTarget()}>\n                &#8594;\n                </Button>\n            </center>\n        </div>\n        </center>\n        </div>\n        </CSSTransitionGroup>);\n      }\n\n      else if ((this.state.participant_info.block_number===2) && (this.state.newblock_frame===true)){\n       return(\n          <div>{setTimeout(()=>this.redirectToTarget(),800)}</div>\n        ) \n      }\n    else if ((this.state.participant_info.block_number===2) && (this.state.newblock_frame===false))\n    {\n      return(\n        <div>{setTimeout(()=>this.redirectToScore(),800)}</div>\n        )\n    }\n}\n}\n\nexport default withRouter(Block);"]},"metadata":{},"sourceType":"module"}