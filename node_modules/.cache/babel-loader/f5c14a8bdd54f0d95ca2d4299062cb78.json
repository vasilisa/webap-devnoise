{"ast":null,"code":"var _jsxFileName = \"/Users/vasilisaskvortsova/Documents/RLNOISE_KIDS/webap-rlnoise-kids/src/components/Board/Board.js\";\nimport React from 'react';\nimport Brick from '../Brick/Brick.js';\nimport { API_URL } from '../../config';\nimport { withRouter } from 'react-router-dom';\nimport './Board.css';\n\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    const participant_info = this.props.location.state.participant_info;\n    const block_info = this.props.location.state.block_info;\n    const pool_symbols = this.props.location.state.pool_symbols;\n    const pool_outcomes = this.props.location.state.pool_outcomes;\n    console.log(block_info);\n    const current_symbols = ['', ''];\n    const current_outcomes = ['', '']; // Define intitial left and right symbols: \n\n    current_symbols[0] = pool_symbols[block_info.position[0] - 1]; // 1 if on the right symbol 1, 0 if on the left \n\n    current_symbols[1] = pool_symbols[2 - block_info.position[0]]; // \n\n    if (block_info.outcome === \"diamond\") {\n      current_outcomes[0] = pool_outcomes[0]; // duplicate \n\n      current_outcomes[1] = pool_outcomes[0];\n    } else {\n      current_outcomes[0] = pool_outcomes[1]; // duplicate \n\n      current_outcomes[1] = pool_outcomes[1];\n    }\n\n    this.state = {\n      clickable: true,\n      // freezing when subject has chosen a symbol\n      animation: true,\n      // relaunch fading animation after each trial\n      feedback: Array(2).fill(null),\n      noFeedback: ['null', 'null'],\n      symbolHighlight: ['null', 'null'],\n      participant_info: participant_info,\n      block_info: block_info,\n      error: '',\n      chosen_rewards: [],\n      unchosen_rewards: [],\n      block_perf: 0.0,\n      chosen_symbols: [],\n      chosen_positions: [],\n      reaction_times: [],\n      current_symbols: current_symbols,\n      current_outcomes: current_outcomes,\n      pool_symbols: pool_symbols,\n      completed: 'no'\n    };\n    this.redirectToBlock.bind(this);\n    var time_date_first = new Date();\n    this.prev_reaction_time_date = time_date_first.getTime();\n  }\n\n  renderBrick(i) {\n    return React.createElement(Brick, {\n      symbol: this.state.current_symbols[i],\n      feedback: this.state.feedback[i],\n      outcome: this.state.current_outcomes[i],\n      animation: this.state.animation,\n      noFeedback: this.state.noFeedback[i],\n      symbolHighlight: this.state.symbolHighlight[i],\n      symbolClicked: () => this.handleClick(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    });\n  }\n\n  handleClick(i) {\n    // console.log(i) // 0 if the left brick clicked and 1 if the right one  \n    // update symbol without Mutation\n    const newcount = this.state.block_info.trial_numb + 1;\n    const end_of_block = (newcount === this.state.block_info.TotalTrial ? true : false) ? true : false;\n\n    if (this.state.clickable) {\n      const feedback = this.state.feedback.slice();\n      const noFeedback = this.state.noFeedback.slice();\n      const symbolHighlight = this.state.symbolHighlight.slice(); // complete feedback \n\n      if (this.state.block_info.block_feedback === \"2\") {\n        if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\") {\n          // symbol 1 is on the left\n          feedback[i] = this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 0) + this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 1);\n          feedback[1 - i] = this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 0) + this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 1);\n        } else {\n          // symbol 1 is on the right \n          feedback[i] = this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 1) + this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 0);\n          feedback[1 - i] = this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 1) + this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 0);\n        }\n\n        noFeedback[1 - i] = '';\n        noFeedback[i] = '';\n        symbolHighlight[i] = '';\n        symbolHighlight[1 - i] = 'null';\n      } else // partial feedback \n        {\n          if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\") {\n            feedback[i] = this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 0) + this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 1);\n          } else {\n            feedback[i] = this.state.block_info.reward_1[this.state.block_info.trial_numb] * (i === 1) + this.state.block_info.reward_2[this.state.block_info.trial_numb] * (i === 0);\n          }\n\n          feedback[1 - i] = null; // unchosen option this will work for the partial feedback\n\n          noFeedback[1 - i] = 'null';\n          noFeedback[i] = '';\n          symbolHighlight[i] = '';\n          symbolHighlight[1 - i] = 'null';\n        }\n\n      this.setState({\n        feedback: feedback,\n        clickable: false,\n        animation: false,\n        noFeedback: noFeedback,\n        symbolHighlight: symbolHighlight\n      }); // save information\n\n      let position = i === 0 ? 'left' : 'right';\n      let chosen_positions = this.state.chosen_positions;\n      chosen_positions.push(position); // chosen_symbol :  \n\n      let chosen_symbols = this.state.chosen_symbols;\n\n      if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\" & i === 0) {\n        var chosen_symbol = 1;\n      } else if (this.state.block_info.position[this.state.block_info.trial_numb] === \"2\" & i === 1) {\n        var chosen_symbol = 1;\n      } else {\n        var chosen_symbol = 2;\n      }\n\n      chosen_symbols.push(chosen_symbol);\n      const chosen_r_th = chosen_symbol === 1 ? this.state.block_info.th_reward_1[this.state.block_info.trial_numb] : this.state.block_info.th_reward_2[this.state.block_info.trial_numb];\n      const unchosen_r_th = chosen_symbol === 1 ? this.state.block_info.th_reward_2[this.state.block_info.trial_numb] : this.state.block_info.th_reward_1[this.state.block_info.trial_numb];\n      const chosen_r = chosen_symbol === 1 ? this.state.block_info.reward_1[this.state.block_info.trial_numb] : this.state.block_info.reward_2[this.state.block_info.trial_numb];\n      const unchosen_r = chosen_symbol === 1 ? this.state.block_info.reward_2[this.state.block_info.trial_numb] : this.state.block_info.reward_1[this.state.block_info.trial_numb]; // console.log('Chosen reward theoretical',chosen_r_th)\n      // console.log('Unchosen reward theoretical',unchosen_r_th)\n      // console.log('Chosen reward',chosen_r)\n      // console.log('Unchosen reward',unchosen_r)\n      // console.log('Observed chosen feedback',feedback[i])\n      // console.log('Observed unchosen feedback',feedback[1-i])\n\n      let block_perf = this.state.block_perf + (chosen_r_th - unchosen_r_th) / this.state.block_info.position.length;\n      let reaction_times = this.state.reaction_times;\n      var date = new Date();\n      let reaction_time = date.getTime() - this.prev_reaction_time_date;\n      this.prev_reaction_time_date = date.getTime();\n      reaction_times.push(reaction_time);\n      let chosen_rewards = this.state.chosen_rewards;\n      chosen_rewards.push(feedback[i]);\n      let unchosen_rewards = this.state.unchosen_rewards;\n      unchosen_rewards.push(feedback[1 - i]);\n      this.setState({\n        chosen_positions: chosen_positions,\n        chosen_symbols: chosen_symbols,\n        chosen_rewards: chosen_rewards,\n        unchosen_rewards: unchosen_rewards,\n        reaction_times: reaction_times,\n        block_perf: block_perf\n      }); // new symbols\n\n      const current_symbols = this.state.current_symbols.slice();\n      current_symbols[0] = this.state.pool_symbols[this.state.block_info.position[newcount] - 1];\n      current_symbols[1] = this.state.pool_symbols[2 - this.state.block_info.position[newcount]]; // start new block or update reset feedbacks for next trial (without mutation)\n\n      if (end_of_block) {\n        setTimeout(() => this.redirectToBlock(), 1000);\n      } else {\n        setTimeout(() => this.setState({\n          clickable: true,\n          feedback: Array(2).fill(null),\n          noFeedback: Array(2).fill('null'),\n          symbolHighlight: Array(2).fill('null'),\n          animation: true,\n          block_info: { ...this.state.block_info,\n            trial_numb: newcount\n          },\n          current_symbols: current_symbols\n        }), 1000);\n      }\n    }\n  }\n\n  redirectToBlock() // Compute the block relative performance: \n  {\n    let block_id = this.state.block_info.block_number; // console.log(this.state.participant_info.game_id)\n\n    let body = {\n      'block_number': this.state.participant_info.block_number + 1,\n      'chosen_positions': this.state.chosen_positions,\n      'chosen_symbols': this.state.chosen_symbols,\n      'chosen_rewards': this.state.chosen_rewards,\n      'unchosen_rewards': this.state.unchosen_rewards,\n      'reaction_times': this.state.reaction_times,\n      'block_perf': this.state.block_perf,\n      'completed': 'yes',\n      'date': this.state.participant_info.date,\n      'game_id': this.state.participant_info.game_id\n    };\n    fetch(`${API_URL}/participants_data/create/` + this.state.participant_info.participant_id + `/` + block_id + `/` + this.state.participant_info.prolific_id, {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(body)\n    });\n    this.props.history.push({\n      pathname: `/Block`,\n      state: {\n        participant_info: this.state.participant_info,\n        newblock_frame: false\n      }\n    });\n  }\n\n  render() {\n    let status;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"status\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270\n      },\n      __self: this\n    }, status), React.createElement(\"div\", {\n      className: \"allBricks\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"brick1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272\n      },\n      __self: this\n    }, \"  \", this.renderBrick(0), \" \"), React.createElement(\"span\", {\n      className: \"brick2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273\n      },\n      __self: this\n    }, \"  \", this.renderBrick(1), \" \")));\n  }\n\n}\n\nexport default withRouter(Board);","map":{"version":3,"sources":["/Users/vasilisaskvortsova/Documents/RLNOISE_KIDS/webap-rlnoise-kids/src/components/Board/Board.js"],"names":["React","Brick","API_URL","withRouter","Board","Component","constructor","props","participant_info","location","state","block_info","pool_symbols","pool_outcomes","console","log","current_symbols","current_outcomes","position","outcome","clickable","animation","feedback","Array","fill","noFeedback","symbolHighlight","error","chosen_rewards","unchosen_rewards","block_perf","chosen_symbols","chosen_positions","reaction_times","completed","redirectToBlock","bind","time_date_first","Date","prev_reaction_time_date","getTime","renderBrick","i","handleClick","newcount","trial_numb","end_of_block","TotalTrial","slice","block_feedback","reward_1","reward_2","setState","push","chosen_symbol","chosen_r_th","th_reward_1","th_reward_2","unchosen_r_th","chosen_r","unchosen_r","length","date","reaction_time","setTimeout","block_id","block_number","body","game_id","fetch","participant_id","prolific_id","method","headers","JSON","stringify","history","pathname","newblock_frame","render","status"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Brick from '../Brick/Brick.js'\nimport { API_URL } from '../../config';\nimport {withRouter} from 'react-router-dom';\n\n\nimport './Board.css';\n\n\n\n\nclass Board extends React.Component {\n  constructor(props){\n    super(props);\n\n    const participant_info = this.props.location.state.participant_info\n    const block_info       = this.props.location.state.block_info\n    const pool_symbols     = this.props.location.state.pool_symbols\n    const pool_outcomes    = this.props.location.state.pool_outcomes\n\n\n    console.log(block_info)\n    \n    const current_symbols  = ['','']\n    const current_outcomes = ['','']\n\n\n    \n    // Define intitial left and right symbols: \n    current_symbols[0]    = pool_symbols[block_info.position[0]-1] // 1 if on the right symbol 1, 0 if on the left \n    current_symbols[1]    = pool_symbols[2-block_info.position[0]] // \n\n    if (block_info.outcome===\"diamond\") {\n      current_outcomes[0]   = pool_outcomes[0] // duplicate \n      current_outcomes[1]   = pool_outcomes[0]\n    }\n    else {\n      current_outcomes[0]   = pool_outcomes[1] // duplicate \n      current_outcomes[1]   = pool_outcomes[1]\n    }\n    \n    this.state = {\n      clickable        : true, // freezing when subject has chosen a symbol\n      animation        : true, // relaunch fading animation after each trial\n      feedback         : Array(2).fill(null),\n      noFeedback       : ['null', 'null'],\n      symbolHighlight  : ['null', 'null'],\n      participant_info : participant_info,\n      block_info       : block_info,        \n      error            : '',\n      chosen_rewards   : [],\n      unchosen_rewards : [],\n      block_perf       : 0.0,\n      chosen_symbols   : [],\n      chosen_positions : [],\n      reaction_times   : [],\n      current_symbols  : current_symbols,\n      current_outcomes : current_outcomes, \n      pool_symbols     : pool_symbols,  \n      completed        : 'no' \n    };\n\n    this.redirectToBlock.bind(this)\n    var time_date_first          = new Date()\n    this.prev_reaction_time_date = time_date_first.getTime()\n  };  \n\n\n  renderBrick(i) {\n    return (\n      <Brick\n        symbol          = {this.state.current_symbols[i]}\n        feedback        = {this.state.feedback[i]}\n        outcome         = {this.state.current_outcomes[i]}\n        animation       = {this.state.animation}\n        noFeedback      = {this.state.noFeedback[i]}\n        symbolHighlight = {this.state.symbolHighlight[i]}\n        symbolClicked   = {() => this.handleClick(i)}\n      />\n    );\n  }\n\n\n  handleClick(i) {\n\n    // console.log(i) // 0 if the left brick clicked and 1 if the right one  \n    // update symbol without Mutation\n    const newcount     = this.state.block_info.trial_numb + 1\n    const end_of_block = (newcount === this.state.block_info.TotalTrial ? true : false ) ? true : false \n    \n    if (this.state.clickable) {\n\n      const feedback        = this.state.feedback.slice();\n      const noFeedback      = this.state.noFeedback.slice();\n      const symbolHighlight = this.state.symbolHighlight.slice();\n      \n    // complete feedback \n    if (this.state.block_info.block_feedback===\"2\") {\n        if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\") {\n         // symbol 1 is on the left\n          feedback[i]   = this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===0) + this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===1)\n          feedback[1-i] = this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===0) + this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===1)\n        }\n        else {\n\n          // symbol 1 is on the right \n          feedback[i]   = this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===1) + this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===0)\n          feedback[1-i] = this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===1) + this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===0)\n       \n        }\n\n        noFeedback[1 - i]    = ''\n        noFeedback[i]        = ''\n        symbolHighlight[i]   = ''\n        symbolHighlight[1-i] = 'null'\n\n      }\n      else  // partial feedback \n      {\n        if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\") {\n\n          feedback[i]   = this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===0) + this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===1)\n       \n        }\n        else {\n          feedback[i]   = this.state.block_info.reward_1[this.state.block_info.trial_numb]*(i===1) + this.state.block_info.reward_2[this.state.block_info.trial_numb]*(i===0)\n          \n        }\n\n      feedback[1 - i]      = null // unchosen option this will work for the partial feedback\n      noFeedback[1 - i]    = 'null'\n      noFeedback[i]        = ''\n      symbolHighlight[i]   = ''\n      symbolHighlight[1-i] = 'null'\n    \n    }\n  \n      this.setState({        \n        feedback  : feedback,\n        clickable : false,\n        animation : false,\n        noFeedback : noFeedback,\n        symbolHighlight: symbolHighlight\n      })\n\n    \n      // save information\n      let position         = (i === 0) ? 'left' : 'right'; \n      let chosen_positions = this.state.chosen_positions;\n      chosen_positions.push(position)\n\n      // chosen_symbol :  \n      let chosen_symbols = this.state.chosen_symbols;\n      if (this.state.block_info.position[this.state.block_info.trial_numb] === \"1\" & (i === 0)) {\n          var chosen_symbol = 1\n        }\n      else if (this.state.block_info.position[this.state.block_info.trial_numb] === \"2\" & (i === 1)) {\n          var chosen_symbol = 1\n        }\n      else {\n        var chosen_symbol = 2\n      }\n\n      chosen_symbols.push(chosen_symbol)  \n\n      const chosen_r_th   = chosen_symbol===1 ? this.state.block_info.th_reward_1[this.state.block_info.trial_numb] : this.state.block_info.th_reward_2[this.state.block_info.trial_numb];\n      const unchosen_r_th = chosen_symbol===1 ? this.state.block_info.th_reward_2[this.state.block_info.trial_numb] : this.state.block_info.th_reward_1[this.state.block_info.trial_numb];\n      \n      \n      const chosen_r   = chosen_symbol===1 ? this.state.block_info.reward_1[this.state.block_info.trial_numb] : this.state.block_info.reward_2[this.state.block_info.trial_numb];\n      const unchosen_r = chosen_symbol===1 ? this.state.block_info.reward_2[this.state.block_info.trial_numb] : this.state.block_info.reward_1[this.state.block_info.trial_numb];\n      \n      // console.log('Chosen reward theoretical',chosen_r_th)\n      // console.log('Unchosen reward theoretical',unchosen_r_th)\n\n      // console.log('Chosen reward',chosen_r)\n      // console.log('Unchosen reward',unchosen_r)\n\n      // console.log('Observed chosen feedback',feedback[i])\n      // console.log('Observed unchosen feedback',feedback[1-i])\n      \n      let block_perf = this.state.block_perf + ((chosen_r_th-unchosen_r_th)/this.state.block_info.position.length) \n\n      let reaction_times           = this.state.reaction_times;\n      var date                     = new Date()\n      let reaction_time            = date.getTime() - this.prev_reaction_time_date\n      this.prev_reaction_time_date = date.getTime()\n      reaction_times.push(reaction_time)\n\n      let chosen_rewards   = this.state.chosen_rewards; \n      chosen_rewards.push(feedback[i])\n\n      let unchosen_rewards = this.state.unchosen_rewards; \n      unchosen_rewards.push(feedback[1-i])\n\n      this.setState({        \n        chosen_positions : chosen_positions,\n        chosen_symbols   : chosen_symbols,\n        chosen_rewards   : chosen_rewards,\n        unchosen_rewards : unchosen_rewards, \n        reaction_times   : reaction_times,\n        block_perf       : block_perf \n      }) \n\n      // new symbols\n      const current_symbols = this.state.current_symbols.slice();\n      current_symbols[0]    = this.state.pool_symbols[this.state.block_info.position[newcount] - 1]\n      current_symbols[1]    = this.state.pool_symbols[2-this.state.block_info.position[newcount]]\n\n\n      // start new block or update reset feedbacks for next trial (without mutation)\n      if (end_of_block){\n        setTimeout(() => this.redirectToBlock()\n                , 1000);        \n      }\n      else {\n        setTimeout(() => this.setState({\n          clickable  : true,\n          feedback   : Array(2).fill(null),\n          noFeedback : Array(2).fill('null'),\n          symbolHighlight: Array(2).fill('null'),\n          animation  : true,\n          block_info : {...this.state.block_info, trial_numb:newcount},\n          current_symbols : current_symbols,        \n        }), 1000);     \n      }\n    }\n  }\n\n  redirectToBlock ()\n\n  // Compute the block relative performance: \n\n  {\n    let block_id   = this.state.block_info.block_number\n\n    // console.log(this.state.participant_info.game_id)\n    \n    let body     = {        'block_number'     : this.state.participant_info.block_number+1, \n                            'chosen_positions' : this.state.chosen_positions,\n                            'chosen_symbols'   : this.state.chosen_symbols,\n                            'chosen_rewards'   : this.state.chosen_rewards,\n                            'unchosen_rewards' : this.state.unchosen_rewards,\n                            'reaction_times'   : this.state.reaction_times,\n                            'block_perf'       : this.state.block_perf,\n                            'completed'        :'yes',\n                            'date'             : this.state.participant_info.date,\n                            'game_id'          : this.state.participant_info.game_id}\n    \n    fetch(`${API_URL}/participants_data/create/` + this.state.participant_info.participant_id + `/` + block_id + `/` + this.state.participant_info.prolific_id, {\n       method: 'POST',\n       headers: {\n         'Accept': 'application/json',\n         'Content-Type': 'application/json',\n       },\n       body: JSON.stringify(body)\n     })\n\n    this.props.history.push({\n      pathname: `/Block`,\n      state: {participant_info:this.state.participant_info, newblock_frame : false}\n    })    \n  }\n\n  render() {\n\n    let status;\n    return (\n      <div> \n        <div  className=\"status\">{status}</div>\n        <div  className=\"allBricks\">\n        <span className='brick1'>  {this.renderBrick(0)} </span>\n        <span className='brick2'>  {this.renderBrick(1)} </span>\n        </div>\n      </div>\n          );\n  }\n}\n\nexport default withRouter(Board);\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}